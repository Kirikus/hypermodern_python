[project]
name = "pywc"
version = "0.1"
requires-python = ">= 3.10"
description = "Example code for IITP course"
authors = [{name = "Derbyshev Dmitry"}]
license = "MIT"
readme = "README.md"
#repository = "https://github.com/cjolowicz/hypermodern-python"
keywords = ["hypermodern"]
dependencies = [
    "numpy (>=2.2.3,<3.0.0)",
    "click (>=8.1.8,<9.0.0)"
]

[project.scripts]
pywc = "pywc.console:main"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.requires-plugins]
poetry-plugin-export = ">=1.8"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
ruff = "^0.9.10"
safety = "^3.3.1"
typeguard = "^4.4.2"
xdoctest = "^1.2.0"
hypothesis = "^6.130.2"
pytest-cov = "^6.0.0"
hypothesis-fspaths = "^0.1"
sphinx-rtd-theme = "^3.0.2"
myst-parser = "^4.0.1"
sphinx-autodoc2 = "^0.5.0"
sphinx-click = "^6.0.0"
matplotlib = "^3.10.1"
furo = "^2024.8.6"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
#select = ["E", "F", "B", "UP", "SIM", "I"]
select = ["ALL"]
ignore = ["D203", "D212"]
fixable = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["S101"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["pywc"]

[tool.coverage.report]
show_missing = true
fail_under = 100


